[{"/Users/younissaleh/Desktop/imessage-clone/src/serviceWorker.js":"1","/Users/younissaleh/Desktop/imessage-clone/src/App.js":"2","/Users/younissaleh/Desktop/imessage-clone/src/app/store.js":"3","/Users/younissaleh/Desktop/imessage-clone/src/component/Imessage.js":"4","/Users/younissaleh/Desktop/imessage-clone/src/component/sidebar/Sidebar.js":"5","/Users/younissaleh/Desktop/imessage-clone/src/component/chat/Chat.js":"6","/Users/younissaleh/Desktop/imessage-clone/src/component/sidebar/sidebarChat/SidebarChat.js":"7","/Users/younissaleh/Desktop/imessage-clone/src/features/userSlice.js":"8","/Users/younissaleh/Desktop/imessage-clone/src/index.js":"9","/Users/younissaleh/Desktop/imessage-clone/src/component/login/Login.js":"10","/Users/younissaleh/Desktop/imessage-clone/src/firebase.js":"11","/Users/younissaleh/Desktop/imessage-clone/src/features/chatSlice.js":"12","/Users/younissaleh/Desktop/imessage-clone/src/component/chat/messages/Messages.js":"13"},{"size":5141,"mtime":1609850987193,"results":"14","hashOfConfig":"15"},{"size":1295,"mtime":1609953842857,"results":"16","hashOfConfig":"15"},{"size":262,"mtime":1609960586196,"results":"17","hashOfConfig":"15"},{"size":530,"mtime":1609984126125,"results":"18","hashOfConfig":"15"},{"size":2595,"mtime":1609958777094,"results":"19","hashOfConfig":"15"},{"size":3688,"mtime":1609987323834,"results":"20","hashOfConfig":"15"},{"size":1320,"mtime":1609986895674,"results":"21","hashOfConfig":"15"},{"size":453,"mtime":1609954086052,"results":"22","hashOfConfig":"15"},{"size":644,"mtime":1609850987187,"results":"23","hashOfConfig":"15"},{"size":1206,"mtime":1609953328675,"results":"24","hashOfConfig":"15"},{"size":778,"mtime":1609951724505,"results":"25","hashOfConfig":"15"},{"size":576,"mtime":1609960744447,"results":"26","hashOfConfig":"15"},{"size":719,"mtime":1609987531801,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1k5y7sa",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/younissaleh/Desktop/imessage-clone/src/serviceWorker.js",[],["62","63"],"/Users/younissaleh/Desktop/imessage-clone/src/App.js",["64"],"import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport Imessage from \"./component/Imessage\"\r\nimport Login from \"./component/login//Login\"\r\nimport { selectUser, login, logout} from \"./features/userSlice\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { auth } from \"./firebase\"\r\n\r\nfunction App ()\r\n{\r\n  const user = useSelector( selectUser )\r\n  // this is gonna allow us to go and get the changes we want from our reducer redux\r\n  const dispatch = useDispatch()\r\n  \r\n  useEffect( () =>\r\n  {// listen for an auth change, when any change accores go ahed and use authUser\r\n    auth.onAuthStateChanged( authUser =>\r\n    {\r\n      if(authUser){\r\n        // User is logged in\r\n        dispatch( login( {\r\n          // we go and ge these things\r\n          uid: authUser.uid,\r\n          photo: authUser.photoURL,\r\n          email: authUser.email,\r\n          displayName: authUser.displayName\r\n        }))\r\n      }else{\r\n        // user is logged out\r\n        dispatch(logout())\r\n      }\r\n    })\r\n  },[] )\r\n  \r\n\r\n  return (\r\n    <div className=\"app\">\r\n      \r\n      {/*  if the user exit thn we gon render the app */ }\r\n      {user ? <Imessage /> :\r\n        \r\n        // then you need to login\r\n        <Login />\r\n      }      \r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",["65","66"],"/Users/younissaleh/Desktop/imessage-clone/src/app/store.js",["67"],"import { configureStore } from '@reduxjs/toolkit';\r\nimport userReducer from '../features/userSlice';\r\nimport chatReducer from '../features/chatSlice';\r\n\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n    chat: chatReducer,\r\n  },\r\n});\r\n",["68","69"],"/Users/younissaleh/Desktop/imessage-clone/src/component/Imessage.js",["70","71","72"],"import React from 'react'\nimport \"./Imessage.css\"\nimport { useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport Sidebar from \"../component/sidebar/Sidebar\"\nimport Chat from \"./chat/Chat\"\nfunction Imessage() {\n    return (\n        <div className=\"iMessage\">\n            {/* Sidebar */ }\n            <Sidebar />\n\n            {/* Chat */ }\n            <Chat />\n        </div>\n    )\n}\n\nexport default Imessage\n","/Users/younissaleh/Desktop/imessage-clone/src/component/sidebar/Sidebar.js",["73","74","75","76","77","78"],"import React, {useState, useEffect} from 'react'\nimport \"./Sidebar.css\"\nimport Modal from \"@material-ui/core/Modal\";\nimport Fade from \"@material-ui/core/Fade\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport {Avatar, IconButton} from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { Tooltip, TextField, Button } from \"@material-ui/core\";\nimport RateReviewIcon from '@material-ui/icons/RateReview';\nimport SidebarChat from \"./sidebarChat/SidebarChat\"\nimport { useSelector } from \"react-redux\";\nimport { selectUser } from \"../../features/userSlice\"\nimport db, {auth} from \"../../firebase\"\n\n\nfunction Sidebar ()\n{\n    const user = useSelector( selectUser );\n    \n    // Keep track of the chat\n    const [ chat, setChat ] = useState( [] )\n    \n    // when the side component load we gon a use a useEffect to fire up the peace of code\n    useEffect( () =>\n    {\n        // creat a collection of chats\n        db.collection( \"chats\" ).onSnapshot( snapshot => (\n            setChat( snapshot.docs.map( doc => ( {\n                id: doc.id,\n                data: doc.data()\n            })))\n        ))\n    }, [] )\n    \n    // Add chat on click\n    const addChat = () =>\n    {\n        // prompt to ask for a chat name  and add it to our sidebar \n        const chatName = prompt( \"Please enter a chat name\" )\n\n        if ( chatName )\n        {\n          db.collection( \"chats\" ).add( {\n            chatName: chatName,\n        })  \n        }\n    }\n\n\n    return (\n        <div className=\"sidebar\">\n\n            {/* Header section  */ }\n            <div className=\"sidebar__header\">\n\n                <Avatar onClick={() => auth.signOut() } className=\"sidebar__avatar\" src={user.photo} />\n                \n                <div className=\"sidebar__input\">\n                    <SearchIcon />\n                    <input type=\"text\" placeholder=\"Search\"/>\n                </div>\n                <IconButton variant=\"outlined\" className=\"sidebar__inputButton\" > \n                    <RateReviewIcon onClick={addChat} className=\"sidebar__Icon\"/>\n                </IconButton>\n            </div>\n\n            \n            {/* Sidebar chats */ }\n            <div className=\"sidebar__chats\">\n                {/* we chats being puled from our db, we gon a map through everysinlgle chat and render a sidebarchat  */}\n                { chat.map( ({id, data: {chatName}}) => (\n                    <SidebarChat key={ id } id={ id } chatName={ chatName}/>\n                ))}\n                \n                \n            </div>\n        </div>\n    )\n}\n\nexport default Sidebar\n","/Users/younissaleh/Desktop/imessage-clone/src/component/chat/Chat.js",["79","80"],"import React, {useState, useEffect} from 'react'\nimport \"./Chat.css\"\nimport { useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { IconButton } from \"@material-ui/core\";\nimport MicNoneIcon from \"@material-ui/icons/MicNone\";\nimport Messages from \"./messages/Messages\"\nimport { selectChatName, selectChatId } from '../../features/chatSlice';\nimport { useSelector } from \"react-redux\" \nimport db from \"../../firebase\"\nimport firebase from \"firebase\"\nimport { selectUser } from \"../../features/userSlice\"\nimport FlipMove from \"react-flip-move\"\n\nfunction Chat ()\n{\n    const [ input, setInput ] = useState( \"\" )\n\n    // Keep track of all the messages that are coming in \n    const [ messages, setMessages ] = useState( [] )\n\n    // set out chatName to this or pull it from this\n    const chatName = useSelector( selectChatName );\n\n    // get the chatId\n    const chatId = useSelector( selectChatId )\n\n    // get the user info 9photo, email,displayName all is here \n    const user =useSelector(selectUser)\n    \n    // useEffect fire when something chnages un our case is the chatId\n    useEffect( () =>\n    {\n        if ( chatId )\n        {  // db(our database) ==> go inside of \"chats\" ==> set the doc to \"chatId\" ==> go the collection and get access to he messages ==> order by a timestamp and a descending timestamps\n            db.collection( \"chats\" ).doc( chatId ).collection( \"messages\" ).orderBy( \"timestamp\", \"desc\" ).onSnapshot( ( snapshot ) =>\n            {\n             // setMessage to that above or store our data into our setMessages\n            setMessages( snapshot.docs.map( doc => ( {\n                id: doc.id,\n                data: doc.data(),\n            }))) \n            })\n            \n            \n        }\n    }, [ chatId ] )\n    \n    \n    const sendMessage = e => {\n        e.preventDefault();\n        if (input) {\n          db.collection(\"chats\")\n            .doc(chatId)\n            .collection(\"messages\")\n            .add({\n              timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n              message: input,\n              uid: user.uid,\n              photo: user.photo,\n              email: user.email,\n              displayName: user.displayName\n            });\n          setInput(\"\");\n          \n        }\n    };\n    \n    return (\n        <div className=\"chat\">\n            {/* chat Header */ }\n            <div className=\"chat__header\">\n                <h4>To: <span className=\"chat__name\">{chatName}</span></h4>\n                <strong>Details</strong>\n                </div>\n            \n            {/* chat messages */ }\n            <div className=\"chat__messages\">\n                    <FlipMove> \n                        {/* render our messages */ }\n                        { messages.map( ({id, data}) => (\n                            <Messages key={id} contents={data} />\n                        ) ) }\n                    </FlipMove>\n                \n                </div>\n            \n            {/* chat input */ }\n            <div className=\"chat__input\">\n                <form>\n                    <input\n                        value={input}\n                        onChange={e => setInput(e.target.value)}\n                        type=\"text\"\n                        placeholder=\"Send Message\"\n                    ></input>\n                    <button type=\"submit\" onClick={sendMessage} >\n                        Send Message\n                    </button>\n                </form>\n                <IconButton>\n                    <MicNoneIcon className=\"chat__mic\" />\n                </IconButton>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Chat\n","/Users/younissaleh/Desktop/imessage-clone/src/component/sidebar/sidebarChat/SidebarChat.js",[],"/Users/younissaleh/Desktop/imessage-clone/src/features/userSlice.js",[],"/Users/younissaleh/Desktop/imessage-clone/src/index.js",[],"/Users/younissaleh/Desktop/imessage-clone/src/component/login/Login.js",[],"/Users/younissaleh/Desktop/imessage-clone/src/firebase.js",[],"/Users/younissaleh/Desktop/imessage-clone/src/features/chatSlice.js",[],"/Users/younissaleh/Desktop/imessage-clone/src/component/chat/messages/Messages.js",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":33,"column":5,"nodeType":"87","endLine":33,"endColumn":7,"suggestions":"88"},{"ruleId":"81","replacedBy":"89"},{"ruleId":"83","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":3,"column":8,"nodeType":"93","messageId":"94","endLine":3,"endColumn":19},{"ruleId":"81","replacedBy":"95"},{"ruleId":"83","replacedBy":"96"},{"ruleId":"91","severity":1,"message":"97","line":3,"column":10,"nodeType":"93","messageId":"94","endLine":3,"endColumn":18},{"ruleId":"91","severity":1,"message":"98","line":4,"column":8,"nodeType":"93","messageId":"94","endLine":4,"endColumn":21},{"ruleId":"91","severity":1,"message":"99","line":5,"column":8,"nodeType":"93","messageId":"94","endLine":5,"endColumn":23},{"ruleId":"91","severity":1,"message":"100","line":3,"column":8,"nodeType":"93","messageId":"94","endLine":3,"endColumn":13},{"ruleId":"91","severity":1,"message":"101","line":4,"column":8,"nodeType":"93","messageId":"94","endLine":4,"endColumn":12},{"ruleId":"91","severity":1,"message":"102","line":5,"column":10,"nodeType":"93","messageId":"94","endLine":5,"endColumn":20},{"ruleId":"91","severity":1,"message":"103","line":8,"column":10,"nodeType":"93","messageId":"94","endLine":8,"endColumn":17},{"ruleId":"91","severity":1,"message":"104","line":8,"column":19,"nodeType":"93","messageId":"94","endLine":8,"endColumn":28},{"ruleId":"91","severity":1,"message":"105","line":8,"column":30,"nodeType":"93","messageId":"94","endLine":8,"endColumn":36},{"ruleId":"91","severity":1,"message":"97","line":3,"column":10,"nodeType":"93","messageId":"94","endLine":3,"endColumn":18},{"ruleId":"91","severity":1,"message":"98","line":4,"column":8,"nodeType":"93","messageId":"94","endLine":4,"endColumn":21},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["108"],["106"],["107"],"no-unused-vars","'chatReducer' is defined but never used.","Identifier","unusedVar",["106"],["107"],"'useTheme' is defined but never used.","'useMediaQuery' is defined but never used.","'SwipeableDrawer' is defined but never used.","'Modal' is defined but never used.","'Fade' is defined but never used.","'withStyles' is defined but never used.","'Tooltip' is defined but never used.","'TextField' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},"Update the dependencies array to be: [dispatch]",{"range":"111","text":"112"},[1021,1023],"[dispatch]"]